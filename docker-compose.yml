version: '3.4'

services:
  postgres:
    image: postgres:11-alpine
    networks:
    - textrepo_network
    ports:
    - 5432:5432
    volumes:
    - ./postgres/initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: postgres.textrepo
      POSTGRES_PORT: ${POSTGRES_PORT}

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    environment:
    - node.name=es01
    - cluster.initial_master_nodes=es01
    - cluster.name=textrepo-cluster
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
    - esdata:/usr/share/elasticsearch/data
    ports:
    - 9200
    networks:
    - textrepo_network

  textrepo-app:
    build: ./textrepo-app
    ports:
    - 8080
    networks:
    - textrepo_network
    command: ["/utils/wait-for-it.sh", "postgres:5432", "elasticsearch:9200",
              "--timeout=0",
              "--",
              "java", "-jar", "/textrepo-app/textrepo.jar", "server", "config.yml"]

  nginx:
    image: nginx:1.17
    networks:
    - textrepo_network
    depends_on:
    - textrepo-app
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    - ./concordion:/concordion:ro
    ports:
    - 8080:8080

  concordion:
    build: ./concordion
    ports:
    - 8080
    networks:
    - textrepo_network
    command: [
      "/utils/wait-for-it.sh", "textrepo-app:8080",
      "--timeout=0",
      "--",
      "mvn", "clean", "test"
    ]
    volumes:
    - ./concordion:/concordion
    environment:
      ES_HOST: elasticsearch:9200
      APP_HOST: textrepo-app:8080
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}

networks:
  textrepo_network:

volumes:
  esdata:
    driver: local
